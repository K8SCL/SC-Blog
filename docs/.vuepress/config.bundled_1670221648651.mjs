// docs/.vuepress/config.ts
import { resolve } from "path";
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.ts
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {};
var htmlModules_default = htmlModule;

// docs/.vuepress/config.ts
var config_default = defineConfig4CustomTheme({
  theme: resolve("F:\\CodeSpace\\k8scl\\docs\\.vuepress", "../../vdoing"),
  locales: {
    "/": {
      lang: "zh-CN",
      title: "",
      description: "K8s \u6E90\u7801\u5B66\u4E60\u3001\u4E8C\u6B21\u5F00\u53D1\u3001\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u5F00\u53D1"
    }
  },
  themeConfig: {
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "Kubernetes \u6E90\u7801\u5F00\u53D1\u4E4B\u65C5",
        link: "/k8scl/",
        items: [
          { text: "K8s \u6E90\u7801\u5F00\u53D1\u4E4B\u65C5", link: "/pages/b99bda/" }
        ]
      }
    ],
    sidebarDepth: 2,
    logo: "/img/logo.png",
    repo: "brook-w/blogs",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: false,
    editLinkText: "\u7F16\u8F91",
    bodyBgImg: [
      {
        url: "https://files.etoury.com/brook-pdf/img/dark-bg1.jpg",
        mode: "dark"
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/dark-bg2.jpg",
        mode: "dark"
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/dark-bg3.jpg",
        mode: "dark"
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/dark-bg4.jpg",
        mode: "dark"
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/dark-bg5.jpg",
        mode: "dark"
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/light-bg1.jpg",
        mode: "light",
        opacity: 0.9
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/light-bg2.jpg",
        mode: "light",
        opacity: 0.9
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/light-bg3.jpg",
        mode: "light",
        opacity: 0.9
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/light-bg4.jpg",
        mode: "light",
        opacity: 0.9
      },
      {
        url: "https://files.etoury.com/brook-pdf/img/light-bg5.jpg",
        mode: "light",
        opacity: 0.9
      }
    ],
    sidebar: "structuring",
    author: {
      name: "brook-w",
      link: "https://github.com/k8scl"
    },
    blogger: {
      avatar: "/img/logo.png",
      name: "brook-w",
      slogan: "K8s \u6E90\u7801\u5B66\u4E60\u3001\u4E8C\u6B21\u5F00\u53D1\u3001\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u5F00\u53D1"
    },
    social: {
      icons: []
    },
    footer: {
      createYear: 2019,
      copyrightInfo: 'Brook-w | <a href="https://github.com/brook-w/blogs/blob/master/LICENSE" target="_blank">GPL License</a>'
    },
    ICP: "\u4EACICP\u59072020045721\u53F7-2",
    extendFrontmatter: {
      author: {
        name: "brook-w",
        link: "https://github.com/k8scl"
      }
    },
    htmlModules: htmlModules_default
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    [
      "meta",
      {
        name: "keywords",
        content: "\u6280\u672F\u6587\u6863,kubernetes,k8s,go,golang"
      }
    ],
    ["meta", { name: "theme-color", content: "#11a8cd" }]
  ],
  plugins: [
    "vuepress-plugin-baidu-autopush",
    [
      "vuepress-plugin-baidu-tongji",
      {
        hm: baiduCode_default
      }
    ],
    "vuepress-plugin-mermaidjs",
    "img-lazy",
    [
      "thirdparty-search",
      {
        thirdparty: [
          {
            title: "\u5728MDN\u4E2D\u641C\u7D22",
            frontUrl: "https://developer.mozilla.org/zh-CN/search?q=",
            behindUrl: ""
          },
          {
            title: "\u5728Runoob\u4E2D\u641C\u7D22",
            frontUrl: "https://www.runoob.com/?s="
          },
          {
            title: "\u5728Vue API\u4E2D\u641C\u7D22",
            frontUrl: "https://cn.vuejs.org/v2/api/#"
          },
          {
            title: "\u5728Bing\u4E2D\u641C\u7D22",
            frontUrl: "https://cn.bing.com/search?q="
          },
          {
            title: "\u901A\u8FC7\u767E\u5EA6\u641C\u7D22\u672C\u7AD9\u7684",
            frontUrl: "https://www.baidu.com/s?wd=site%3Axugaoyi.com%20"
          }
        ]
      }
    ],
    [
      "one-click-copy",
      {
        copySelector: ['div[class*="language-"] pre', 'div[class*="aside-code"] aside'],
        copyMessage: "\u590D\u5236\u6210\u529F",
        duration: 1e3,
        showInMobile: false
      }
    ],
    [
      "demo-block",
      {
        settings: {
          jsfiddle: false,
          codepen: true,
          horizontal: false
        }
      }
    ],
    [
      "vuepress-plugin-zooming",
      {
        selector: ".theme-vdoing-content img:not(.no-zoom)",
        options: {
          bgColor: "rgba(0,0,0,0.6)"
        }
      }
    ],
    [
      "@vuepress/last-updated",
      {
        transformer: (timestamp, lang) => {
          return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
        }
      }
    ]
  ],
  markdown: {
    lineNumbers: false,
    extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
  },
  extraWatchFiles: [
    ".vuepress/config.ts",
    ".vuepress/config/htmlModules.ts"
  ]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
