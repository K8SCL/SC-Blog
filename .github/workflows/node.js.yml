# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy to gh-pages branch

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # node-version: [14.x, 16.x, 18.x]
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: Commit files
        run: |
          git config --local user.email "1285837374@qq.com"
          git config --local user.name "github-actions[bot]"
          git branch -a
          git checkout -b gh-pages origin/gh-pages
          git branch
          ls -al
          # git checkout -q --track origin/gh-pages
          # echo "current dir:"
          # ls -al
          # rm -rf *
          # git commit -a -m "remove all files"
          # mv /home/${USER}/dist ./
          # echo "current dir:"
          # ls -al
          # rm -rf *
          # git commit -a -m "fill deploy files"
          # git remote --verbose
          # git push -f

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: "npm"
      # - run: npm install -g yarn
      # - run: yarn && yarn build
      # - run: mv ./docs/.vuepress/dist /home/${USER}/dist/ && cd /home/${USER}/dist/ && ls -al
      # - name: Commit files
      #   run: |
      #     git config --local user.email "1285837374@qq.com"
      #     git config --local user.name "github-actions[bot]"
      #     git checkout -q --track origin/gh-pages
      #     echo "current dir:"
      #     ls -al
      #     rm -rf *
      #     git commit -a -m "remove all files"
      #     mv /home/${USER}/dist ./
      #     echo "current dir:"
      #     ls -al
      #     rm -rf *
      #     git commit -a -m "fill deploy files"
      #     git remote --verbose
      #     git push -f
      # - run: echo "Deploy Success"
